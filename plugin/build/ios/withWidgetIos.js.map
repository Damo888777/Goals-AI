{"version":3,"file":"withWidgetIos.js","sourceRoot":"","sources":["../../src/ios/withWidgetIos.ts"],"names":[],"mappings":";;;AACA,uDAAmD;AACnD,mDAA+C;AAGxC,MAAM,aAAa,GAAkC,CAC1D,MAAM,EACN,OAAO,EACP,EAAE;IACF,wEAAwE;IACxE,4EAA4E;IAC5E,MAAM,GAAG,IAAA,6BAAa,EAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IAEvC,mEAAmE;IACnE,8DAA8D;IAC9D,MAAM,GAAG,IAAA,iCAAe,EAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IAEzC,4DAA4D;IAC5D,mEAAmE;IACnE,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,GAAG;YAAE,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY;YAAE,MAAM,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC;QAE3D,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,uCAAuC,CAAC,IAAI,EAAE,CAAC;QACzF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;YAC5C,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrC,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,uCAAuC,CAAC,GAAG,SAAS,CAAC;IAC/E,CAAC;IAED,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AA1BY,QAAA,aAAa,iBA0BzB","sourcesContent":["import { ConfigPlugin } from \"@expo/config-plugins\"\nimport { withWidgetXCode } from \"./withWidgetXCode\"\nimport { withWidgetEAS } from \"./withWidgetEAS\"\nimport { WithWidgetProps } from \"../index\"\n\nexport const withWidgetIos: ConfigPlugin<WithWidgetProps> = (\n  config,\n  options,\n) => {\n  // Führe die notwendigen Modifikatoren in der richtigen Reihenfolge aus.\n  // Zuerst die EAS-Konfiguration, damit EAS über die Extension Bescheid weiß.\n  config = withWidgetEAS(config, options)\n  \n  // Dann die Xcode-Projektmodifikation, die das Target, die Dateien,\n  // die Build-Settings UND die Entitlements korrekt einrichtet.\n  config = withWidgetXCode(config, options)\n\n  // Stelle sicher, dass die Haupt-App auch die App Group hat.\n  // Dies ist der einzige Teil, den wir aus der alten Logik behalten.\n  if (options.appGroupId) {\n    if (!config.ios) config.ios = {};\n    if (!config.ios.entitlements) config.ios.entitlements = {};\n    \n    const appGroups = config.ios.entitlements[\"com.apple.security.application-groups\"] || [];\n    if (!appGroups.includes(options.appGroupId)) {\n      appGroups.push(options.appGroupId);\n    }\n    config.ios.entitlements[\"com.apple.security.application-groups\"] = appGroups;\n  }\n  \n  return config\n}"]}