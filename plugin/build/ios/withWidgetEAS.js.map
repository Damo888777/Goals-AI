{"version":3,"file":"withWidgetEAS.js","sourceRoot":"","sources":["../../src/ios/withWidgetEAS.ts"],"names":[],"mappings":";;;AAGO,MAAM,aAAa,GAAkC,CAC1D,MAAM,EACN,OAAO,EACP,EAAE;;IACF,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA;IACjC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAA;IACzC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAA;IACrD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY;QACjC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,IAAI,EAAE,CAAA;IAC3C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG;QACrC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,EAAE,CAAA;IAC/C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa;QACnD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,IAAI,EAAE,CAAA;IAE7D,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CACvE,CAAC,SAAkC,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,KAAK,QAAQ,CAC1E,CAAA;IAED,IAAI,MAAM,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CACb,oJAAoJ,CACrJ,CAAA;IACH,CAAC;IAED,MAAM,gBAAgB,GAAG,CAAA,MAAA,MAAM,CAAC,GAAG,0CAAE,gBAAgB,KAAI,EAAE,CAAA;IAE3D,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CACb,uHAAuH,CACxH,CAAA;IACH,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,GAAG;QACtD,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa;QACxD;YACE,UAAU,EAAE,QAAQ;YACpB,gBAAgB,EAAE,GAAG,gBAAgB,SAAS;SAC/C;KACF,CAAA;IAED,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAzCY,QAAA,aAAa,iBAyCzB","sourcesContent":["import { ConfigPlugin } from \"@expo/config-plugins\"\nimport { WithWidgetProps } from \"../index\"\n\nexport const withWidgetEAS: ConfigPlugin<WithWidgetProps> = (\n  config,\n  options,\n) => {\n  config.extra = config.extra || {}\n  config.extra.eas = config.extra.eas || {}\n  config.extra.eas.build = config.extra.eas.build || {}\n  config.extra.eas.build.experimental =\n    config.extra.eas.build.experimental || {}\n  config.extra.eas.build.experimental.ios =\n    config.extra.eas.build.experimental.ios || {}\n  config.extra.eas.build.experimental.ios.appExtensions =\n    config.extra.eas.build.experimental.ios.appExtensions || []\n\n  const widget = config.extra.eas.build.experimental.ios.appExtensions.find(\n    (extension: { targetName?: string }) => extension.targetName === \"widget\",\n  )\n\n  if (widget) {\n    throw new Error(\n      `[withWidget] Found existing widget extension in app.json at config.extra.eas.build.experimental.ios.appExtensions. Please remove it and try again.`,\n    )\n  }\n\n  const bundleIdentifier = config.ios?.bundleIdentifier || \"\"\n\n  if (!bundleIdentifier) {\n    throw new Error(\n      `[withWidget] Unable to find bundleIdentifier in app.json at config.ios.bundleIdentifier. Please add it and try again.`,\n    )\n  }\n\n  config.extra.eas.build.experimental.ios.appExtensions = [\n    ...config.extra.eas.build.experimental.ios.appExtensions,\n    {\n      targetName: \"widget\",\n      bundleIdentifier: `${bundleIdentifier}.widget`,\n    },\n  ]\n\n  return config\n}\n"]}