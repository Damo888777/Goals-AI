{"version":3,"file":"withWidgetEAS.js","sourceRoot":"","sources":["../../src/ios/withWidgetEAS.ts"],"names":[],"mappings":";;;AAGO,MAAM,aAAa,GAAkC,CAC1D,MAAM,EACN,OAAO,EACP,EAAE;;IACF,0DAA0D;IAC1D,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA;IACjC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAA;IACzC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAA;IACrD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY;QACjC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,IAAI,EAAE,CAAA;IAC3C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG;QACrC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,EAAE,CAAA;IAC/C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa;QACnD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,IAAI,EAAE,CAAA;IAE7D,qDAAqD;IACrD,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CACjF,CAAC,SAAc,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,KAAK,QAAQ,CACtD,CAAA;IACD,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE,CAAC;QACvB,0DAA0D;QAC1D,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,MAAM,gBAAgB,GAAG,MAAA,MAAM,CAAC,GAAG,0CAAE,gBAAgB,CAAA;IACrD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAA;IACzF,CAAC;IAED,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAA;IACrC,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAA;IAC1F,CAAC;IAED,2DAA2D;IAC3D,MAAM,kBAAkB,GAAG;QACzB,UAAU,EAAE,QAAQ;QACpB,gBAAgB,EAAE,GAAG,gBAAgB,SAAS;QAC9C,mCAAmC;QACnC,sFAAsF;QACtF,YAAY,EAAE;YACZ,uCAAuC,EAAE,CAAC,UAAU,CAAC;SACtD;KACF,CAAC;IAEF,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAE/E,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAhDY,QAAA,aAAa,iBAgDzB","sourcesContent":["import { ConfigPlugin } from \"@expo/config-plugins\"\nimport { WithWidgetProps } from \"../index\"\n\nexport const withWidgetEAS: ConfigPlugin<WithWidgetProps> = (\n  config,\n  options,\n) => {\n  // Pfad zur EAS Build Konfiguration im app.json extra-Feld\n  config.extra = config.extra || {}\n  config.extra.eas = config.extra.eas || {}\n  config.extra.eas.build = config.extra.eas.build || {}\n  config.extra.eas.build.experimental =\n    config.extra.eas.build.experimental || {}\n  config.extra.eas.build.experimental.ios =\n    config.extra.eas.build.experimental.ios || {}\n  config.extra.eas.build.experimental.ios.appExtensions =\n    config.extra.eas.build.experimental.ios.appExtensions || []\n\n  // Überprüfen, ob das Widget bereits konfiguriert ist\n  const widgetIndex = config.extra.eas.build.experimental.ios.appExtensions.findIndex(\n    (extension: any) => extension.targetName === \"widget\",\n  )\n  if (widgetIndex !== -1) {\n    // Widget-Konfiguration entfernen, um sie neu hinzuzufügen\n    config.extra.eas.build.experimental.ios.appExtensions.splice(widgetIndex, 1);\n  }\n  \n  const bundleIdentifier = config.ios?.bundleIdentifier\n  if (!bundleIdentifier) {\n    throw new Error(`[withWidget] ios.bundleIdentifier muss in der app.json gesetzt sein.`)\n  }\n  \n  const appGroupId = options.appGroupId\n  if (!appGroupId) {\n    throw new Error(`[withWidget] appGroupId muss in den Plugin-Optionen übergeben werden.`)\n  }\n\n  // Die neue, erweiterte Konfiguration für die App Extension\n  const newExtensionConfig = {\n    targetName: \"widget\",\n    bundleIdentifier: `${bundleIdentifier}.widget`,\n    // DIES IST DER ENTSCHEIDENDE TEIL:\n    // Wir teilen EAS direkt mit, welche Entitlements das Provisioning Profile haben MUSS.\n    entitlements: {\n      \"com.apple.security.application-groups\": [appGroupId],\n    },\n  };\n\n  config.extra.eas.build.experimental.ios.appExtensions.push(newExtensionConfig);\n\n  return config\n}"]}